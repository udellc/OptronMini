/*by Nathan Wolekused gradient panel as starting pointarguments: fgred fggreen fgblue bgred bggreen bgblue */outlets = 0;sketch.default2d();sketch.fsaa=0; // no antialiasingvar mybrgb = [1.,1.,1.];var myfrgb = [0.2,0.2,0.2];var firstoffset = 5;var gridspacing = 11;var numofgridspaces = 64;var skiprate = 4;// process argumentsif (jsarguments.length>1)	myfrgb[0] = jsarguments[1]/255.;if (jsarguments.length>2)	myfrgb[1] = jsarguments[2]/255.;if (jsarguments.length>3)	myfrgb[2] = jsarguments[3]/255.;if (jsarguments.length>4)	mybrgb[0] = jsarguments[4]/255.;if (jsarguments.length>5)	mybrgb[1] = jsarguments[5]/255.;if (jsarguments.length>6)	mybrgb[2] = jsarguments[6]/255.;if (jsarguments.length>7)	skiprate = jsarguments[7];draw();function frgb(r,g,b){	myfrgb[0] = r/255.;	myfrgb[1] = g/255.;	myfrgb[2] = b/255.;	draw();	refresh();}function brgb(r,g,b){	mybrgb[0] = r/255.;	mybrgb[1] = g/255.;	mybrgb[2] = b/255.;	draw();	refresh();}function msg_int(a){	skiprate = a;	draw();	refresh();	notifyclients();}function getvalueof(){	return skiprate;}function setvalueof(v){	skiprate = v;}function draw(){	var str,width,height,aspect;	var firstposition, currentposition, currentworldposition;	var count;		height = box.rect[3] - box.rect[1]; 	width = box.rect[2] - box.rect[0]; 	aspect = width/height;			with (sketch) {		// erase background		glclearcolor(mybrgb);		glclear();				firstposition = sketch.worldtoscreen(-1*aspect,1,0);		firstposition[0] += firstoffset;				currentposition = firstposition;				// draw ticks		glcolor(myfrgb);		count = numofgridspaces;				while (count >= 0)		{			currentworldposition = sketch.screentoworld(currentposition);			linesegment(currentworldposition[0], 1, 0, currentworldposition[0], -1, 0);			currentposition[0] += (gridspacing * skiprate);			count -= skiprate;		}			}}function onresize(w,h){	draw();	refresh();}onresize.local = 1; //private